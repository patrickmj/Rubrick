
<?php
include_once('../../ARC2.php');


class DataNegotiatorTest extends PHPUnit_Framework_TestCase {



	public function __construct()
	{
		$storeConf = array(
		  /* db */
		  'db_host' => 'localhost', /* optional, default is localhost */
		  'db_name' => 'my_db',
		  'db_user' => 'user',
		  'db_pwd' => 'secret',

		  /* store name (= table prefix) */
		  'store_name' => 'my_store',
		);

		$this->store = ARC2::getStore($storeConf);

	}

	public function getNegotiator()
	{

		$conf = array(
		  'ns' => array(
			'rdf' => 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
			'rdfs' => 'http://www.w3.org/2000/01/rdf-schema#',
			'dbpedia' => 'http://dbpedia.org/ontology/',
			'foaf' => 'http://xmlns.com/foaf/0.1/',
			'xsd' => 'http://www.w3.org/2001/XMLSchema#',
			'dcterms' => 'http://purl.org/dc/terms/'
		  ),
		  'store' => $this->store
		);
		return ARC2::getComponent('negotiators_DataNegotiatorPlugin', $conf);
	}


	public function getGraph() 
	{
		$g = ARC2::getComponent('PMJ_ResourceGraphPlugin');
		$g->addResource($this->getRes());
		return $g;
	}


	public function getRes()
	{
		$conf = array(
		  'ns' => array(
			'rdf' => 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
			'rdfs' => 'http://www.w3.org/2000/01/rdf-schema#',
			'dbpedia' => 'http://dbpedia.org/ontology/',
			'foaf' => 'http://xmlns.com/foaf/0.1/',
			'xsd' => 'http://www.w3.org/2001/XMLSchema#',
			'dcterms' => 'http://purl.org/dc/terms/'
		  )
		);

	    $res = ARC2::getComponent('PMJ_ResourcePlusPlugin', $conf);
		$res->setURI('http://example.info/resourceplus1');
		$res->addPropValue('foaf:page', 'http://twitter.com');
		$res->addPropValue('rdfs:type', 'foaf:Person');
		$res->addPropValue('dcterms:title', "Unit testing rocks my world", 'literal', 'xsd:string', 'en');
		$res->addPropValue('dcterms:title', "Froggies", 'literal', null, 'fr');
		$res->addPropValue('dcterms:title', "Das Boot", 'literal', null, 'de');
		$res->addPropValue('dcterms:date', '2009-11-20', 'literal', 'xsd:date');
		$res->addPropValue('rdfs:type', 'foaf:Person');

		return $res;
	}


	public function testInit()
	{
		$conf = array(
		  'ns' => array(
			'rdf' => 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',
			'rdfs' => 'http://www.w3.org/2000/01/rdf-schema#',
			'dbpedia' => 'http://dbpedia.org/ontology/',
			'foaf' => 'http://xmlns.com/foaf/0.1/',
			'xsd' => 'http://www.w3.org/2001/XMLSchema#',
			'dcterms' => 'http://purl.org/dc/terms/'
		  ),
		  'store' => $this->store
		);



		$n = ARC2::getComponent('negotiators_DataNegotiatorPlugin', $conf);
		$this->assertTrue(isset($n->store));
		$this->assertEquals('NegotiatorSelector' , get_class($n->selector));
		$this->assertTrue( count($n->selector->negotiators) > 0);

		//test adding to a predefined ns (e.g., sioc prefix already present, but not clobbered on init)

		$testN = ARC2::getComponent('negotiators_TestPlugin', $conf);
		$this->assertTrue( array_key_exists('foaf' , $testN->ns) ) ; 
		$this->assertTrue( array_key_exists('test' , $testN->ns) ) ; 



	}


	public function testAddSubNegotiator()
	{
		$n = $this->getNegotiator();
		$n->setCurrURI('http://example.com/currURI');


		$n->addSubNegotiator('negotiators_TestPlugin');
		$this->assertEquals(1 , count($n->subNegotiators));

		$this->assertEquals('negotiators_TestPlugin', get_class($n->subNegotiators[0]));

		//test setting currURI from caller
		

		//test setting revURI from caller


	}
	

	public function testAddSubNegotiatorsByTest()
	{
		//test default list of all negotiators
		$n = $this->getNegotiator();
		$n->addSubNegotiatorsByTest('skipme');		
		$this->assertEquals(0, count($n->subNegotiators));


		$n->addSubNegotiatorsByTest('woot');

		$this->assertTrue(count($n->selector->negotiators) > 0 );
		$this->assertEquals(1, count($n->subNegotiators));

		//test giving it a list of the specific negotiators to test
		$n = $this->getNegotiator();

		$n->addSubNegotiatorsByTest('skipme', array('negotiators_TestPlugin'));		
		$this->assertEquals(0, count($n->subNegotiators));


		$n->addSubNegotiatorsByTest('woot', array('negotiators_TestPlugin'));
		$this->assertEquals(1, count($n->subNegotiators));


		//test giving it a list that includes a negotiator that isn't installed

		$n = $this->getNegotiator();
		$n->addSubNegotiatorsByTest('woot', array('negotiators_DoesntExistPlugin', 'negotiators_TestPlugin'));
		$this->assertEquals(1, count($n->subNegotiators));
	}
	
	

	public function testSetStore()
	{


	}


	public function testAddGraph()
	{
		$g = $this->getGraph();
		$n = $this->getNegotiator();
		$n->addGraph($g);

		$this->assertTrue(array_key_exists('http://example.info/resourceplus1', $n->graph->resources));

	}


	public function testMerge()
	{


	}


	public function testSetSource()
	{


	}
	

	public function testSetSubNegotiators()
	{


	}
	

	public function testProcess()
	{


	}
	

	public function testProcessCurrResource()
	{
		$n = $this->getNegotiator();
		
		$this->assertFalse($n->processCurrResource());


		$n->currURI = "http://example.com/currURI";
		$n->revProp = 'foaf:page';
		$n->revURI = 'http://example.com/revURI';

		$this->assertTrue($n->processCurrResource() );
		$this->assertEquals('http://example.com/currURI', $n->currResource->uri);



		$this->assertEquals(0, $n->currResource->triplesCount());
		$this->assertTrue(array_key_exists('http://example.com/revURI', $n->graph->resources));
		$this->assertTrue(array_key_exists($n->revURI, $n->graph->resources));
	}
	

	public function testProcessSubNegotiators()
	{


	}
	

	public function testAddToStore()
	{


	}
	

	public function testSerializeTo()
	{


	}
	

	public function testTrimTrailingSlash()
	{


	}
	

	public function testTestApplies()
	{


	}
	

	public function testSetCurrURI()
	{


	}
	
	

}


?>
